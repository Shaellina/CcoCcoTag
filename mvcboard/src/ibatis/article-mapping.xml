<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="article">

	<typeAlias alias="ArticleVO" type="article.models.ArticleVO" />
	<typeAlias alias="PageVO" type="article.controllers.PageVO"/>
	<typeAlias alias="PageNation" type="article.controllers.PageNation"/>

	<cacheModel type="memory" id="listCache" >
		<flushInterval hours="24"/> <!-- 한번 DB에서 불러온 것을 시간, 분, 초, 밀리초로 정할 수 있다. -->	
		<flushOnExecute statement="article.insertArticle"/>
		<flushOnExecute statement="article.updateArticle"/>
		<flushOnExecute statement="article.deleteArticle"/>
		<!-- insert, update, delete가 발생할 때마다 cache를 갱신한다 -->	
	</cacheModel>



	<resultMap class="ArticleVO" id="articleMap">
		<result property="no" column="no"/><!-- property는 VO의 getter 이름을 준다. -->
		<result property="title" column="title"/>
		<result property="name" column="name"/>
		<result property="regdate" column="regdate"/>
		<result property="viewcount" column="viewcount"/>
	</resultMap>


	<insert id="insertArticle" parameterClass="ArticleVO">
		insert into tb_article(
			no, 
			name, 
			title, 
			content, 
			pwd
		)values(
			seq_article.nextval, 
			#name#,
			#title#, 
			#content#, 
			#pwd#
		)
	</insert>
	
	<select id="getDetail" parameterClass="long" resultClass="ArticleVO">
		SELECT 	no,
				title,
				name,
				regdate,
				viewcount,
				content
		FROM	tb_article
		WHERE	no=#no#
	</select>
	
	<update id="updateViewCount" parameterClass="Long">
		UPDATE tb_article SET
		viewcount=viewcount+1
		WHERE no=#no#
	</update>
	
	<update id="updateArticle" parameterClass="ArticleVO">
		UPDATE tb_article SET
				name=#name#,
				title=#title#,
				content=#content#
		WHERE	no=#no# AND pwd=#pwd#
	</update>
	
	<delete id="deleteArticle" parameterClass="ArticleVO">
		DELETE FROM tb_article
		WHERE no=#no# AND pwd=#pwd#
	</delete>
	
	<select id="getTotalCount" resultClass="Long">
		SELECT count(*)
		FROM tb_article
	</select>
	
	<select id="getArticleList" resultClass="ArticleVO" cacheModel="listCache">
	SELECT 	no, 
			name, 
			title, 
			regdate, 
			viewcount
	FROM tb_article
	ORDER BY no DESC
	</select>
	
	<select id="getArticlePageList" parameterClass="PageVO" resultClass="PageNation">
	SELECT b.* 
	FROM ( 
		 SELECT rownum as rnum, a.*
		 FROM ( 
		 		SELECT no, name, title, regdate, viewcount
		 		FROM tb_article
		 		ORDER BY no desc
		      ) a
		 ) b
	WHERE rnum BETWEEN #startnum# AND #endnum# 
	</select>
	<!-- #startnum# => getStartnum을 의미 -->
	
</sqlMap>